package day13_0714;

public class Test7 {

	public static void main(String[] args) {
		
		// "함수에게 주체가 생긴다."
		// 객체지향언어 4가지 특징
		// 1) 캡슐화 - private 접근제어자 (setter,getter)
		// 2) 상속  - extends
		// 3) 추상화
		// 4) 다형성 - 진행예정

		// 생성자      this(==자기자신객체), super(부모클래스)
		// 클래스 --new 생성자(==함수)--> 객체
		//            생성자 - 객체화,인스턴스화, 클래스와 이름이 같다!
		//함수(input,ouput,기능) output이 없어도 됨! 왜?? - 반환되는 것이 당연히 객체라서
		// 함수명 중복 사용(정의) == 오버로딩
		
		
		// 부모클래스 <--상속--> 자식클래스
		// 자식클래스의 생성자에서는 가장먼저
		// 부모클래스의 기본생성자를 호출 !
		// 만약에, 부모클래스에게 기본생성자가 없다면?
		// 1) 부모클래스에게 기본생성자를 작성
		//		: 설계 방식에 어긋나기때문에!! 사용하지않는다...
		// 2) 부모클래스의 다른 생성자를 이용☆
		
		
		// 객체 배열
		
		// 객체가 들어갈수있는 공간이 생긴것!
		// 객체를 저장해야 실질적 이용가능
		int[] data = new int[3]; // 배열 공간 만! 생성
		
		// -> 클래스 배열
		// Person[] data= new Person[3];
		// data[0] = new Person();
		// Person p = new Person();
		// data[1] = p; // p라는 객체를 저장
		
		
		
		
	} // main종료

}
